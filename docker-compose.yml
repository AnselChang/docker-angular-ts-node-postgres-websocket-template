services:
  client:
    image: nestris/client:${NODE_ENV}
    build:
      context: .
      dockerfile: Dockerfile.client
      target: ${BUILD_STAGE}  # Use the target based on the environment variable
    volumes:
      - ./client:/app:cached  # Mount the client directory for live reload
    environment:
      - NODE_ENV=${NODE_ENV}
    ports:
      - "80:80"  # Expose port 80 for production
      - "4200:4200"  # Expose port 4200 for development
    depends_on:
      - server  # Ensure client waits for server to be ready
    command: >
      sh -c "
      if [ '${NODE_ENV}' = 'development' ]; then
        npm start;
      else
        nginx -g 'daemon off;';
      fi
      "

  server:
    image: nestris/server:${NODE_ENV}
    build:
      context: .
      dockerfile: Dockerfile.server
    volumes:
      - ./server:/app:cached  # Mount the server directory for live reload
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - NODE_ENV=${NODE_ENV}
    ports:
      - "3000:3000"
    depends_on:
      - postgres

  postgres:
    image: nestris/postgres:${NODE_ENV}
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data

volumes:
  postgres-data:
